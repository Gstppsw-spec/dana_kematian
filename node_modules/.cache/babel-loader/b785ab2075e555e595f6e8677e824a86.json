{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\Gunawan Sitepu\\\\Dekstop\\\\frontend\\\\src\\\\halaman\\\\HasilPengajuan.jsx\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { useState } from \"react\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import ResultCard from \"../component/ResultCard\";\n// const HasilPengajuan = (props) => {\n//   const [hasil, setHasil] = useState([]);\n//   const fetchHasil = async () => {\n//     await axios\n//       .get(`http://localhost:8000/api/data_kematian`)\n//       .then(({ data }) => {\n//         setHasil(data);\n//       });\n//   };\n//   useEffect(() => {\n//     fetchHasil();\n//   }, []);\n//   const [filterPengajuan, setFilterPengajuan] = useState([]);\n//   async function prepareFilterPengajuan(arrayToBeFiltered, wordparam) {\n//     const filtered = await arrayToBeFiltered.filter((anObject) => {\n//       return anObject.nik.toLowerCase().indexOf(wordparam.toLowerCase()) > -1;\n//     });\n//     return filtered;\n//   }\n//   useEffect(() => {\n//     prepareFilterPengajuan(hasil, props.word).then((trip) => {\n//       setFilterPengajuan(trip);\n//       console.log(trip);\n//     });\n//   }, [props.word]);\n//   if (Array.isArray(filterPengajuan) && filterPengajuan.length) {\n//     return (\n//       <div>\n//         {console.log(filterPengajuan)}\n//         {filterPengajuan.map((trip) => {\n//           return <ResultCard nik={trip.nik} nama={trip.nama} />;\n//         })}\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div>\n//         <span>No result found</span>\n//       </div>\n//     );\n//   }\n// };\n// export default HasilPengajuan;\nimport React, { useState, useEffect } from \"react\";\nimport ResultCard from \"../component/ResultCard\";\nimport Card from 'semantic-ui-react';\nimport { TRIPSARRAY } from \"./DummyData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HasilPengajuan = props => {\n  _s();\n\n  const [filterdTrips, setFilterdTrips] = useState([]);\n\n  async function prepareFilteredTrips(arrayToBeFiltered, wordparam) {\n    const filtered = await arrayToBeFiltered.filter(anObject => {\n      return anObject.nik.toLowerCase().indexOf(wordparam.toLowerCase()) > -1;\n    });\n    return filtered;\n  }\n\n  useEffect(() => {\n    prepareFilteredTrips(TRIPSARRAY, props.word).then(trip => {\n      setFilterdTrips(trip);\n    });\n  }, [props.word]);\n\n  if (Array.isArray(filterdTrips) && filterdTrips.length) {\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      children: console.log(filterdTrips)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          textAlign: \"center\",\n          children: \"No result found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(HasilPengajuan, \"K7c+jyMNaQ64UY+Ql3e1KFUvd70=\");\n\n_c = HasilPengajuan;\nexport default HasilPengajuan;\n\nvar _c;\n\n$RefreshReg$(_c, \"HasilPengajuan\");","map":{"version":3,"names":["React","useState","useEffect","ResultCard","Card","TRIPSARRAY","HasilPengajuan","props","filterdTrips","setFilterdTrips","prepareFilteredTrips","arrayToBeFiltered","wordparam","filtered","filter","anObject","nik","toLowerCase","indexOf","word","then","trip","Array","isArray","length","console","log"],"sources":["D:/User/Gunawan Sitepu/Dekstop/frontend/src/halaman/HasilPengajuan.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import ResultCard from \"../component/ResultCard\";\r\n\r\n// const HasilPengajuan = (props) => {\r\n//   const [hasil, setHasil] = useState([]);\r\n\r\n//   const fetchHasil = async () => {\r\n//     await axios\r\n//       .get(`http://localhost:8000/api/data_kematian`)\r\n//       .then(({ data }) => {\r\n//         setHasil(data);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchHasil();\r\n//   }, []);\r\n\r\n//   const [filterPengajuan, setFilterPengajuan] = useState([]);\r\n\r\n//   async function prepareFilterPengajuan(arrayToBeFiltered, wordparam) {\r\n//     const filtered = await arrayToBeFiltered.filter((anObject) => {\r\n//       return anObject.nik.toLowerCase().indexOf(wordparam.toLowerCase()) > -1;\r\n//     });\r\n//     return filtered;\r\n//   }\r\n//   useEffect(() => {\r\n//     prepareFilterPengajuan(hasil, props.word).then((trip) => {\r\n//       setFilterPengajuan(trip);\r\n//       console.log(trip);\r\n//     });\r\n//   }, [props.word]);\r\n\r\n//   if (Array.isArray(filterPengajuan) && filterPengajuan.length) {\r\n//     return (\r\n//       <div>\r\n//         {console.log(filterPengajuan)}\r\n//         {filterPengajuan.map((trip) => {\r\n//           return <ResultCard nik={trip.nik} nama={trip.nama} />;\r\n//         })}\r\n//       </div>\r\n//     );\r\n//   } else {\r\n//     return (\r\n//       <div>\r\n//         <span>No result found</span>\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n// export default HasilPengajuan;\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nimport ResultCard from \"../component/ResultCard\";\r\nimport Card from 'semantic-ui-react'\r\nimport { TRIPSARRAY } from \"./DummyData\";\r\n\r\nconst HasilPengajuan = props => {\r\n  const [filterdTrips, setFilterdTrips] = useState([]);\r\n\r\n  async function prepareFilteredTrips(arrayToBeFiltered, wordparam){\r\n    const filtered = await arrayToBeFiltered.filter((anObject) => {\r\n      return(\r\n        (anObject.nik.toLowerCase().indexOf(wordparam.toLowerCase())> -1)\r\n      );\r\n    });\r\n    return filtered;\r\n  }\r\n  useEffect(() => {\r\n    prepareFilteredTrips(TRIPSARRAY, props.word).then((trip) => {\r\n      setFilterdTrips(trip);\r\n    })\r\n  }, [props.word]);\r\n\r\n  if(Array.isArray(filterdTrips) && filterdTrips.length) {\r\n    return(\r\n      <Card.Group>\r\n        {console.log(filterdTrips)}\r\n      </Card.Group>\r\n    );\r\n  }else{\r\n    return(\r\n      <Card fluid>\r\n        <Card.Content>\r\n          <Card.Header textAlign=\"center\">No result found</Card.Header>\r\n        </Card.Content>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HasilPengajuan;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAAA;;EAC9B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;;EAEA,eAAeS,oBAAf,CAAoCC,iBAApC,EAAuDC,SAAvD,EAAiE;IAC/D,MAAMC,QAAQ,GAAG,MAAMF,iBAAiB,CAACG,MAAlB,CAA0BC,QAAD,IAAc;MAC5D,OACGA,QAAQ,CAACC,GAAT,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCN,SAAS,CAACK,WAAV,EAAnC,IAA6D,CAAC,CADjE;IAGD,CAJsB,CAAvB;IAKA,OAAOJ,QAAP;EACD;;EACDX,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAACL,UAAD,EAAaE,KAAK,CAACY,IAAnB,CAApB,CAA6CC,IAA7C,CAAmDC,IAAD,IAAU;MAC1DZ,eAAe,CAACY,IAAD,CAAf;IACD,CAFD;EAGD,CAJQ,EAIN,CAACd,KAAK,CAACY,IAAP,CAJM,CAAT;;EAMA,IAAGG,KAAK,CAACC,OAAN,CAAcf,YAAd,KAA+BA,YAAY,CAACgB,MAA/C,EAAuD;IACrD,oBACE,QAAC,IAAD,CAAM,KAAN;MAAA,UACGC,OAAO,CAACC,GAAR,CAAYlB,YAAZ;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAND,MAMK;IACH,oBACE,QAAC,IAAD;MAAM,KAAK,MAAX;MAAA,uBACE,QAAC,IAAD,CAAM,OAAN;QAAA,uBACE,QAAC,IAAD,CAAM,MAAN;UAAa,SAAS,EAAC,QAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;AACF,CAhCD;;GAAMF,c;;KAAAA,c;AAkCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}