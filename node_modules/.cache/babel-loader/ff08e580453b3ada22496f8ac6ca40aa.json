{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\Gunawan Sitepu\\\\Dekstop\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import Navbar from \"./component/Navbar\";\n// import Login from \"./component/Login\";\n// import Topbar from \"./component/Topbar\";\n// import Home from \"./component/Home\";\n// import \"./style/dark.scss\";\n// import ListKematian from \"./halaman/ListKematian\";\n// import { useContext } from \"react\";\n// import { DarkModeContext } from \"./context/darkModeContext\";\n// import Tambah from \"./halaman/Tambah\";\n// import Edit from \"./halaman/Edit\";\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// function App() {\n//   const { darkMode } = useContext(DarkModeContext);\n//   return (\n//     <div className={darkMode ? \"app dark\" : \"app\"}>\n//       <Router>\n//         <Routes>\n//           <Route exact path=\"/\" element={<Login/>}/>\n//           <Route exact path=\"/dashboard\" element={<Home />} />\n//           <Route exact path=\"/kematian\">\n//             <Route index element={<ListKematian/>}/>\n//             <Route path=\"kematian/baru\" element={<Tambah/>} title=\"Tambah Data Baru\"/>\n//             <Route path=\"kematian/edit/:id\" element={<Edit/>}/>\n//           </Route>\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport userEvent from '@testing-library/user-event';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [searchParam] = useState([\"nik\", \"nama\"]); // .get(`http://localhost:8000/api/data_kematian`)\n  // const getItems = async () => {\n  //   const berries = await fetch(\"http://localhost:8000/api/data_kematian\")\n  //   const value = await berries.json()\n  //   console.log(value)\n  //   .then(\n  //     (result) => {\n  //       setIsLoaded(true);\n  //       setItems(result);\n  //       console.log(setItems)\n  //     },\n  //     (error) => {\n  //       setIsLoaded(true);\n  //       setError(error);\n  //     },\n  //   )\n  // }\n  // useEffect(() => {\n  //     getItems()\n  //   }, [])\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/data_kematian\").then(res => res.json()).then(result => {\n      console.log(result);\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.nik]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(App, \"5D5Bvi6MWidf/wNvfO7/j0mxCbE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","userEvent","axios","App","error","setError","isLoaded","setIsLoaded","items","setItems","q","setQ","searchParam","fetch","then","res","json","result","console","log","message","map","item","name","nik","id"],"sources":["D:/User/Gunawan Sitepu/Dekstop/frontend/src/App.js"],"sourcesContent":["// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import Navbar from \"./component/Navbar\";\n// import Login from \"./component/Login\";\n// import Topbar from \"./component/Topbar\";\n// import Home from \"./component/Home\";\n// import \"./style/dark.scss\";\n// import ListKematian from \"./halaman/ListKematian\";\n// import { useContext } from \"react\";\n// import { DarkModeContext } from \"./context/darkModeContext\";\n// import Tambah from \"./halaman/Tambah\";\n// import Edit from \"./halaman/Edit\";\n// import 'bootstrap/dist/css/bootstrap.min.css'\n\n// function App() {\n//   const { darkMode } = useContext(DarkModeContext);\n//   return (\n//     <div className={darkMode ? \"app dark\" : \"app\"}>\n//       <Router>\n//         <Routes>\n//           <Route exact path=\"/\" element={<Login/>}/>\n//           <Route exact path=\"/dashboard\" element={<Home />} />\n//           <Route exact path=\"/kematian\">\n//             <Route index element={<ListKematian/>}/>\n//             <Route path=\"kematian/baru\" element={<Tambah/>} title=\"Tambah Data Baru\"/>\n//             <Route path=\"kematian/edit/:id\" element={<Edit/>}/>\n//           </Route>\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport userEvent from '@testing-library/user-event';\nimport axios from 'axios';\nexport default function App() {\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [searchParam] = useState([\"nik\", \"nama\"]);\n\n\n  // .get(`http://localhost:8000/api/data_kematian`)\n  // const getItems = async () => {\n  //   const berries = await fetch(\"http://localhost:8000/api/data_kematian\")\n  //   const value = await berries.json()\n  //   console.log(value)\n  //   .then(\n  //     (result) => {\n  //       setIsLoaded(true);\n  //       setItems(result);\n  //       console.log(setItems)\n  //     },\n  //     (error) => {\n  //       setIsLoaded(true);\n  //       setError(error);\n  //     },\n      \n  //   )\n    \n  // }\n  // useEffect(() => {\n  //     getItems()\n  //   }, [])\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/data_kematian\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return<div>Loading ...</div>;\n  }\n  else {\n  return (\n    <div>\n      <ul>\n        {items.map(item => (\n          <li key={item.id}>\n            {item.name} {item.nik}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n}\n\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACU,CAAD,EAAIC,IAAJ,IAAYX,QAAQ,CAAC,EAAD,CAA1B;EACA,MAAM,CAACY,WAAD,IAAgBZ,QAAQ,CAAC,CAAC,KAAD,EAAQ,MAAR,CAAD,CAA9B,CAN4B,CAS5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;;EACAD,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,yCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;MACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAV,WAAW,CAAC,IAAD,CAAX;MACAE,QAAQ,CAACQ,MAAD,CAAR;IACD,CAPL,EAQI;IACA;IACA;IACCb,KAAD,IAAW;MACTG,WAAW,CAAC,IAAD,CAAX;MACAF,QAAQ,CAACD,KAAD,CAAR;IACD,CAdL;EAgBD,CAjBQ,EAiBN,EAjBM,CAAT;;EAmBA,IAAIA,KAAJ,EAAW;IACT,oBAAO;MAAA,sBAAaA,KAAK,CAACgB,OAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO,IAAI,CAACd,QAAL,EAAe;IACpB,oBAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAN;EACD,CAFM,MAGF;IACL,oBACE;MAAA,uBACE;QAAA,UACGE,KAAK,CAACa,GAAN,CAAUC,IAAI,iBACb;UAAA,WACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,GADpB;QAAA,GAASF,IAAI,CAACG,EAAd;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;AACA;;GApEuBtB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}