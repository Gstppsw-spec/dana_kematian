{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\Gunawan Sitepu\\\\Dekstop\\\\frontend\\\\src\\\\component\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport gambarr from \"../img/profile.jpg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [pesanError, setPesanError] = useState({});\n  const [isKirim, setIsKirim] = useState(false);\n  const database = [{\n    username: \"user\",\n    password: \"pass\"\n  }, {\n    username: \"userdua\",\n    password: \"passdua\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0];\n    const userData = database.find(user => user.username === uname.value);\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        setPesanError({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsKirim(true);\n      }\n    } else {\n      setPesanError({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  const renderPesanError = name => name === pesanError.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: pesanError.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: gambarr,\n      alt: \"profile_picture\",\n      className: \"profilepic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), renderPesanError(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), renderPesanError(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app home condiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), isKirim ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" User is Successfully logged in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"4B+r3z7kWUEy3yk7N7V6xUJs2rY=\");\n\n_c = Login;\nexport default Login; // import React, { useState } from \"react\";\n// import ReactDOM from \"react-dom\";\n// function Login() {\n//   // React States\n//   const [errorMessages, setErrorMessages] = useState({});\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n//   // User Login info\n//   const database = [\n//     {\n//       username: \"user1\",\n//       password: \"pass1\"\n//     },\n//     {\n//       username: \"user2\",\n//       password: \"pass2\"\n//     }\n//   ];\n//   const errors = {\n//     uname: \"invalid username\",\n//     pass: \"invalid password\"\n//   };\n//   const handleSubmit = (event) => {\n//     //Prevent page reload\n//     event.preventDefault();\n//     var { uname, pass } = document.forms[0];\n//     // Find user login info\n//     const userData = database.find((user) => user.username === uname.value);\n//     // Compare user info\n//     if (userData) {\n//       if (userData.password !== pass.value) {\n//         // Invalid password\n//         setErrorMessages({ name: \"pass\", message: errors.pass });\n//       } else {\n//         setIsSubmitted(true);\n//       }\n//     } else {\n//       // Username not found\n//       setErrorMessages({ name: \"uname\", message: errors.uname });\n//     }\n//   };\n//   // Generate JSX code for error message\n//   const renderErrorMessage = (name) =>\n//     name === errorMessages.name && (\n//       <div className=\"error\">{errorMessages.message}</div>\n//     );\n//   // JSX code for login form\n//   const renderForm = (\n//     <div className=\"form\">\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"input-container\">\n//           <label>Username </label>\n//           <input type=\"text\" name=\"uname\" required />\n//           {renderErrorMessage(\"uname\")}\n//         </div>\n//         <div className=\"input-container\">\n//           <label>Password </label>\n//           <input type=\"password\" name=\"pass\" required />\n//           {renderErrorMessage(\"pass\")}\n//         </div>\n//         <div className=\"button-container\">\n//           <input type=\"submit\" />\n//         </div>\n//       </form>\n//     </div>\n//   );\n//   return (\n//     <div className=\"app\">\n//       <div className=\"login-form\">\n//         <div className=\"title\">Sign In</div>\n//         {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n//       </div>\n//     </div>\n//   );\n// }\n// export default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","ReactDOM","gambarr","Login","pesanError","setPesanError","isKirim","setIsKirim","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderPesanError","renderForm"],"sources":["D:/User/Gunawan Sitepu/Dekstop/frontend/src/component/Login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport gambarr from \"../img/profile.jpg\";\r\nimport \"./App.css\";\r\n\r\nfunction Login() {\r\n  const [pesanError, setPesanError] = useState({});\r\n  const [isKirim, setIsKirim] = useState(false);\r\n\r\n  const database = [\r\n    {\r\n      username: \"user\",\r\n      password: \"pass\",\r\n    },\r\n    {\r\n      username: \"userdua\",\r\n      password: \"passdua\",\r\n    },\r\n  ];\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\",\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    var { uname, pass } = document.forms[0];\r\n\r\n    const userData = database.find((user) => user.username === uname.value);\r\n\r\n    if (userData) {\r\n      if (userData.password !== pass.value) {\r\n        setPesanError({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsKirim(true);\r\n      }\r\n    } else {\r\n      setPesanError({ name: \"uname\", message: errors.uname });\r\n    }\r\n  };\r\n\r\n  const renderPesanError = (name) =>\r\n    name === pesanError.name && (\r\n      <div className=\"error\">{pesanError.message}</div>\r\n    );\r\n\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <img src={gambarr} alt=\"profile_picture\" className=\"profilepic\"></img>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username</label>\r\n          <input type=\"text\" name=\"uname\" required />\r\n          {renderPesanError(\"uname\")}\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label>Password</label>\r\n          <input type=\"password\" name=\"pass\" required />\r\n          {renderPesanError(\"pass\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"app home condiv\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Sign In</div>\r\n        {isKirim ? <div> User is Successfully logged in </div> : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n// import React, { useState } from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n\r\n// function Login() {\r\n//   // React States\r\n//   const [errorMessages, setErrorMessages] = useState({});\r\n//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n//   // User Login info\r\n//   const database = [\r\n//     {\r\n//       username: \"user1\",\r\n//       password: \"pass1\"\r\n//     },\r\n//     {\r\n//       username: \"user2\",\r\n//       password: \"pass2\"\r\n//     }\r\n//   ];\r\n\r\n//   const errors = {\r\n//     uname: \"invalid username\",\r\n//     pass: \"invalid password\"\r\n//   };\r\n\r\n//   const handleSubmit = (event) => {\r\n//     //Prevent page reload\r\n//     event.preventDefault();\r\n\r\n//     var { uname, pass } = document.forms[0];\r\n\r\n//     // Find user login info\r\n//     const userData = database.find((user) => user.username === uname.value);\r\n\r\n//     // Compare user info\r\n//     if (userData) {\r\n//       if (userData.password !== pass.value) {\r\n//         // Invalid password\r\n//         setErrorMessages({ name: \"pass\", message: errors.pass });\r\n//       } else {\r\n//         setIsSubmitted(true);\r\n//       }\r\n//     } else {\r\n//       // Username not found\r\n//       setErrorMessages({ name: \"uname\", message: errors.uname });\r\n//     }\r\n//   };\r\n\r\n//   // Generate JSX code for error message\r\n//   const renderErrorMessage = (name) =>\r\n//     name === errorMessages.name && (\r\n//       <div className=\"error\">{errorMessages.message}</div>\r\n//     );\r\n\r\n//   // JSX code for login form\r\n//   const renderForm = (\r\n//     <div className=\"form\">\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"input-container\">\r\n//           <label>Username </label>\r\n//           <input type=\"text\" name=\"uname\" required />\r\n//           {renderErrorMessage(\"uname\")}\r\n//         </div>\r\n//         <div className=\"input-container\">\r\n//           <label>Password </label>\r\n//           <input type=\"password\" name=\"pass\" required />\r\n//           {renderErrorMessage(\"pass\")}\r\n//         </div>\r\n//         <div className=\"button-container\">\r\n//           <input type=\"submit\" />\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"app\">\r\n//       <div className=\"login-form\">\r\n//         <div className=\"title\">Sign In</div>\r\n//         {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}